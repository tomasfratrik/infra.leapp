# Example cmd: tmt try -p /plans/test_playbooks_parallel_local centos-stream-9
summary: A plan for running locally with tmt
tag: playbooks_parallel_local
provision:
  - name: control-node1
    role: control_node
    # TF uses `how: artemis`, tmt try uses `how: virtual`. No need to define `how`
    # `connection: system` is for `how: virtual` to make VMs get a real IP to configure ssh easily
    # This setting is ignored on artemis so we can keep it
    connection: system
  - name: managed-node1
    role: managed_node
    connection: system
    # hardware:
    #   # Second network interface for the network role
    #   network:
    #     - type: eth
    #     - type: eth
    #   # 4GB memory for the mssql role
    #   memory: ">= 4096 MB"
environment:
    SR_ANSIBLE_VER: 2.17
    SR_REPO_NAME: "hpc"
    SR_PYTHON_VERSION: 3.12
    SR_ONLY_TESTS: ""
    SR_TEST_LOCAL_CHANGES: false
    SR_PR_NUM: ""
    SR_LSR_USER: ""
    SR_LSR_DOMAIN: ""
    SR_LSR_SSH_KEY: ""
    SR_ARTIFACTS_DIR: ""
    SR_ARTIFACTS_URL: ""
    SR_TFT_DEBUG: false
prepare:
  - name: Use vault.centos.org repos (CS 7, 8 EOL workaround)
    # Providing order to run prep tasks as first because beakerlib is required
    order: 10
    script: |
      if grep -q 'CentOS Stream release 8' /etc/redhat-release; then
        sed -i '/^mirror/d;s/#\(baseurl=http:\/\/\)mirror/\1vault/' /etc/yum.repos.d/*.repo
      fi
      if grep -q 'CentOS Linux release 7.9' /etc/redhat-release; then
        sed -i '/^mirror/d;s/#\?\(baseurl=http:\/\/\)mirror/\1vault/' /etc/yum.repos.d/*.repo
      fi
  # Replace with feature: epel: enabled once https://github.com/teemtee/tmt/pull/3128 is merged
  - name: Enable epel to install beakerlib
    script: |
      # CS 10 and Fedora doesn't require epel
      if grep -q -e 'CentOS Stream release 10' -e 'Fedora release' /etc/redhat-release; then
        exit 0
      fi
      yum install epel-release yum-utils -y
      yum-config-manager --enable epel epel-debuginfo epel-sourcediscover:
  - name: Prepare managed node
    how: fmf
    where: managed_node
    filter: tag:prep_managed_node
  - name: Run test playbooks from control_node
    how: fmf
    where: control_node
    filter: tag:test_playbooks
execute:
    how: tmt
# HACK: Using size-n because >< operators work like version comparison - they
# expect a package-like format and do not work with just integer numbers.
# adjust in plans doesn't work for context defined within the plan.
# Therefore to define the "size" context from outside:
# For tmt, with `tmt -c size=size-n try`
# For testing-farm, with `testing-farm request -c size=size-n`
adjust:
  - when: size >= size-2
    provision+:
      - name: managed-node02
        role: managed_node
        how: artemis
        image: ${COMPOSE_MANAGED_NODE}
        arch: ${ARCH_MANAGED_NODE}
        hardware:
          network:
            - type: eth
            - type: eth
          memory: ">= 4096 MB"
